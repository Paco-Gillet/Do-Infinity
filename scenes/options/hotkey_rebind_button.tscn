[gd_scene load_steps=2 format=3 uid="uid://bboet6vnjs84r"]

[sub_resource type="GDScript" id="GDScript_1h1f1"]
script/source = "
extends Control

@onready var label = $HBoxContainer/Label as Label
@onready var button = $HBoxContainer/Button as Button

@export var action_name : String = \"move_up\"

# Called when the node enters the scene tree for the first time.
func _ready():
	set_process_unhandled_key_input(false)
	set_action_name()
	set_text_for_key()

func set_action_name() -> void:
	label.text = \"Unassigned\"
	
	match action_name:
		\"move_up\":
			label.text = \"Move up\"
		\"move_down\":
			label.text = \"Move down\"

func set_text_for_key() -> void:
	var action_events = InputMap.action_get_events(action_name)
	var action_event = action_events[0]
	var action_keycode = OS.get_keycode_string(action_event.physical_keycode)
	button.text = \"%s\" % action_keycode


func _on_button_toggled(button_pressed):
	if button_pressed:
		button.text = \"Press any Key...\"
		set_process_unhandled_key_input(button_pressed)
		
		for i in get_tree().get_nodes_in_group(\"hotkey_button\"):
			if i.action_name != self.action_name:
				i.button.toggle_mode = false
				i.set_process_unhandled_key_input(false)
	else:
		for i in get_tree().get_nodes_in_group(\"hotkey_button\"):
			if i.action_name != self.action_name:
				i.button.toggle_mode = true
				i.set_process_unhandled_key_input(false)
			
		set_text_for_key()
		print(button.text)

func _unhandled_key_input(event):
	rebind_action_key(event)
	button.button_pressed = false
	
func rebind_action_key(event) ->void:
	InputMap.action_erase_events(action_name)
	InputMap.action_add_event(action_name, event)
	
	set_process_unhandled_key_input(false)
	set_text_for_key()
	set_action_name()
"

[node name="hotkey_rebind_button" type="Control" groups=["hotkey_button"]]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_1h1f1")

[node name="HBoxContainer" type="HBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 4
anchor_top = 0.5
anchor_bottom = 0.5
offset_top = -15.5
offset_right = 155.0
offset_bottom = 15.5
grow_vertical = 2
alignment = 1

[node name="Label" type="Label" parent="HBoxContainer"]
custom_minimum_size = Vector2(400, 30)
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "Action"
vertical_alignment = 1

[node name="VSeparator" type="VSeparator" parent="HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/separation = 100

[node name="Button" type="Button" parent="HBoxContainer"]
custom_minimum_size = Vector2(300, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 32
toggle_mode = true
text = "Action_Key"

[connection signal="toggled" from="HBoxContainer/Button" to="." method="_on_button_toggled"]
